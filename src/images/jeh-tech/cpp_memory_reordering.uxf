<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<diagram program="umlet" version="14.3.0">
  <zoom_level>10</zoom_level>
  <element>
    <id>Text</id>
    <coordinates>
      <x>710</x>
      <y>560</y>
      <w>180</w>
      <h>60</h>
    </coordinates>
    <panel_attributes>*memory_order_acquire*
At this point B sees all
writes performed by A.</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Text</id>
    <coordinates>
      <x>360</x>
      <y>510</y>
      <w>180</w>
      <h>30</h>
    </coordinates>
    <panel_attributes>*memory_order_release*</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>520</x>
      <y>510</y>
      <w>120</w>
      <h>40</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;-
Release</panel_attributes>
    <additional_attributes>100.0;20.0;10.0;20.0</additional_attributes>
  </element>
  <element>
    <id>Text</id>
    <coordinates>
      <x>500</x>
      <y>420</y>
      <w>100</w>
      <h>60</h>
    </coordinates>
    <panel_attributes>r/w can't be
re-ordered
below release</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>490</x>
      <y>390</y>
      <w>130</w>
      <h>120</h>
    </coordinates>
    <panel_attributes>lt=&lt;-&lt;
</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;100.0;110.0;100.0;110.0;10.0;30.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>610</x>
      <y>560</y>
      <w>120</w>
      <h>40</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;-
Acquire</panel_attributes>
    <additional_attributes>100.0;20.0;10.0;20.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>470</x>
      <y>530</y>
      <w>330</w>
      <h>40</h>
    </coordinates>
    <panel_attributes>lt=.
lw=4
</panel_attributes>
    <additional_attributes>10.0;20.0;310.0;20.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>570</x>
      <y>230</y>
      <w>100</w>
      <h>50</h>
    </coordinates>
    <panel_attributes>*Shared*
*Variable*</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>610</x>
      <y>270</y>
      <w>30</w>
      <h>640</h>
    </coordinates>
    <panel_attributes>lt=.</panel_attributes>
    <additional_attributes>10.0;620.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>440</x>
      <y>320</y>
      <w>100</w>
      <h>30</h>
    </coordinates>
    <panel_attributes>*Thread A*</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>700</x>
      <y>320</y>
      <w>100</w>
      <h>30</h>
    </coordinates>
    <panel_attributes>*Thread B*</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Text</id>
    <coordinates>
      <x>900</x>
      <y>570</y>
      <w>290</w>
      <h>150</h>
    </coordinates>
    <panel_attributes>style=wordwrap
The synchronization is established only between the threads releasing and acquiring the same atomic variable. Other threads can see different order of memory accesses than either or both of the synchronized threads.

/--cppreference.com/</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Text</id>
    <coordinates>
      <x>640</x>
      <y>650</y>
      <w>100</w>
      <h>60</h>
    </coordinates>
    <panel_attributes>r/w can't be
re-ordered
above acquire</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>630</x>
      <y>620</y>
      <w>130</w>
      <h>120</h>
    </coordinates>
    <panel_attributes>lt=&lt;-&lt;
</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;100.0;110.0;100.0;110.0;10.0;30.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>680</x>
      <y>510</y>
      <w>350</w>
      <h>80</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;-
                                     Release/Acquire makes
                                                 write in A visible to B!
</panel_attributes>
    <additional_attributes>210.0;60.0;130.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Text</id>
    <coordinates>
      <x>900</x>
      <y>710</y>
      <w>300</w>
      <h>150</h>
    </coordinates>
    <panel_attributes>style=wordwrap
If one thread performs an acquire operation on an address and then a release operation, anything that happens between the two must be visible to other threads when they perform an acquire operation on the same memory address.

/-- informit.com/
fg=blue</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>460</x>
      <y>820</y>
      <w>330</w>
      <h>40</h>
    </coordinates>
    <panel_attributes>lt=.
lw=4
</panel_attributes>
    <additional_attributes>10.0;20.0;310.0;20.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>610</x>
      <y>850</y>
      <w>220</w>
      <h>40</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;-
Release</panel_attributes>
    <additional_attributes>10.0;20.0;200.0;20.0</additional_attributes>
  </element>
  <element>
    <id>Text</id>
    <coordinates>
      <x>640</x>
      <y>750</y>
      <w>100</w>
      <h>60</h>
    </coordinates>
    <panel_attributes>r/w can't be
re-ordered
below release</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>630</x>
      <y>720</y>
      <w>130</w>
      <h>120</h>
    </coordinates>
    <panel_attributes>lt=&lt;-&lt;
</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;100.0;110.0;100.0;110.0;10.0;30.0;10.0</additional_attributes>
  </element>
</diagram>
